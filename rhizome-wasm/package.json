{
  "name": "rhizome-wasm",
  "version": "0.1.0",
  "description": "",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rhizomedb/rs-rhizome.git"
  },
  "keywords": [],
  "author": "",
  "license": "Apache-2.0 or MIT",
  "bugs": {
    "url": "https://github.com/rhizomedb/rs-rhizome/issues"
  },
  "homepage": "https://github.com/rhizomedb/rs-rhizome#readme",
  "type": "module",
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "browser": {
        "types": "./lib/browser/rhizome_wasm.d.ts",
        "import": "./lib/browser/rhizome_wasm.js"
      },
      "node": {
        "types": "./lib/node/rhizome_wasm.d.ts",
        "import": "./lib/browser/rhizome_wasm.js",
        "require": "./lib/node/rhizome_wasm.js"
      },
      "deno": {
        "types": "./lib/deno/rhizome_wasm.d.ts",
        "import": "./lib/deno/rhizome_wasm.js"
      },
      "workerd": {
        "types": "./lib/workerd/rhizome_wasm.d.ts",
        "import": "./lib/workerd/index.js"
      },
      "import": "./lib/browser/rhizome_wasm.js",
      "require": "./lib/node/rhizome_wasm.js"
    }
  },
  "scripts": {
    "build": "export PROFILE=dev && export TARGET_DIR=debug && npm run buildall",
    "release": "export PROFILE=release && export TARGET_DIR=release && npm run buildall",
    "buildall": "wireit",
    "clean": "wireit",
    "test": "wireit",
    "test:browser": "wireit",
    "test:node": "wireit"
  },
  "wireit": {
    "compile": {
      "command": "cargo build --target wasm32-unknown-unknown --profile $PROFILE",
      "env": {
        "PROFILE": {
          "external": true
        }
      }
    },
    "opt": {
      "command": "wasm-opt -O1 target/wasm32-unknown-unknown/$TARGET_DIR/rhizome_wasm.wasm -o target/wasm32-unknown-unknown/$TARGET_DIR/rhizome_wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "compile"
      ]
    },
    "bindgen:browser": {
      "command": "wasm-bindgen --target web --out-dir lib/browser target/wasm32-unknown-unknown/$TARGET_DIR/rhizome_wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ]
    },
    "bindgen:node": {
      "command": "wasm-bindgen --target nodejs --out-dir lib/node target/wasm32-unknown-unknown/$TARGET_DIR/rhizome_wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ]
    },
    "bindgen:deno": {
      "command": "wasm-bindgen --target deno --out-dir lib/deno target/wasm32-unknown-unknown/$TARGET_DIR/rhizome_wasm.wasm",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ]
    },
    "bindgen:workerd": {
      "command": "wasm-bindgen --target web --out-dir lib/workerd target/wasm32-unknown-unknown/$TARGET_DIR/rhizome_wasm.wasm && shx cp src/loaders/export-workerd-wasm.js lib/workerd/index.js",
      "env": {
        "TARGET_DIR": {
          "external": true
        }
      },
      "dependencies": [
        "opt"
      ]
    },
    "buildall": {
      "dependencies": [
        "bindgen:browser",
        "bindgen:node",
        "bindgen:deno",
        "bindgen:workerd"
      ]
    },
    "clean": {
      "command": "shx rm -rf ./lib"
    },
    "test:prepare": {
      "command": "npx playwright install && shx mkdir tests/report",
      "output": [
        "tests/report"
      ]
    },
    "test:chromium": {
      "command": "pw-test tests/browser.test.ts --assets lib/browser --reporter json --cov > tests/report/chromium.json",
      "dependencies": [
        "build",
        "test:prepare"
      ]
    },
    "test:firefox": {
      "command": "pw-test tests/browser.test.ts --assets lib/browser --reporter json --browser firefox > tests/report/firefox.json",
      "dependencies": [
        "build",
        "test:prepare"
      ],
      "output": [
        "tests/report/firefox.json"
      ]
    },
    "test:webkit": {
      "command": "pw-test tests/browser.test.ts --assets lib/browser --reporter json --browser webkit > tests/report/webkit.json",
      "dependencies": [
        "build",
        "test:prepare"
      ],
      "output": [
        "tests/report/webkit.json"
      ]
    },
    "test:browser": {
      "dependencies": [
        "test:chromium",
        "test:firefox",
        "test:webkit"
      ]
    },
    "test:node": {
      "command": "vitest run node.test.ts --outputFile tests/report/node.json",
      "dependencies": [
        "build",
        "test:prepare"
      ],
      "output": [
        "tests/report/node.json"
      ]
    },
    "test:report": {
      "command": "nyc report --reporter=json-summary --report-dir tests/report",
      "dependencies": [
        "test:chromium"
      ],
      "output": [
        "tests/report/coverage-summary.json"
      ]
    },
    "test": {
      "dependencies": [
        "test:browser",
        "test:node",
        "test:report"
      ]
    }
  },
  "devDependencies": {
    "@playwright/test": "^1.34.3",
    "@types/expect": "^24.3.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.2.5",
    "assert": "^2.0.0",
    "expect": "^29.5.0",
    "mocha": "^10.2.0",
    "nyc": "^15.1.0",
    "playwright-test": "^9.1.0",
    "shx": "^0.3.4",
    "ts-node": "^10.9.1",
    "vitest": "^0.31.4",
    "wireit": "^0.10.0"
  }
}
